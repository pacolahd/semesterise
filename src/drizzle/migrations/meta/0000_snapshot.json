{
  "id": "f42db582-2aef-4710-997b-5216236194ab",
  "prevId": "00000000-0000-0000-0000-000000000000",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.department_heads": {
      "name": "department_heads",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "department_code": {
          "name": "department_code",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "staff_id": {
          "name": "staff_id",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "start_date": {
          "name": "start_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "end_date": {
          "name": "end_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "is_current": {
          "name": "is_current",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "department_heads_department_code_departments_code_fk": {
          "name": "department_heads_department_code_departments_code_fk",
          "tableFrom": "department_heads",
          "tableTo": "departments",
          "columnsFrom": [
            "department_code"
          ],
          "columnsTo": [
            "code"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "department_heads_staff_id_staff_profiles_staff_id_fk": {
          "name": "department_heads_staff_id_staff_profiles_staff_id_fk",
          "tableFrom": "department_heads",
          "tableTo": "staff_profiles",
          "columnsFrom": [
            "staff_id"
          ],
          "columnsTo": [
            "staff_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.departments": {
      "name": "departments",
      "schema": "",
      "columns": {
        "code": {
          "name": "code",
          "type": "varchar(10)",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.majors": {
      "name": "majors",
      "schema": "",
      "columns": {
        "department_code": {
          "name": "department_code",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "code": {
          "name": "code",
          "type": "varchar(10)",
          "primaryKey": true,
          "notNull": true
        },
        "degree": {
          "name": "degree",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "majors_department_code_departments_code_fk": {
          "name": "majors_department_code_departments_code_fk",
          "tableFrom": "majors",
          "tableTo": "departments",
          "columnsFrom": [
            "department_code"
          ],
          "columnsTo": [
            "code"
          ],
          "onDelete": "restrict",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.staff_email_roles": {
      "name": "staff_email_roles",
      "schema": "",
      "columns": {
        "email": {
          "name": "email",
          "type": "varchar(100)",
          "primaryKey": true,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "department_code": {
          "name": "department_code",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "staff_email_roles_department_code_departments_code_fk": {
          "name": "staff_email_roles_department_code_departments_code_fk",
          "tableFrom": "staff_email_roles",
          "tableTo": "departments",
          "columnsFrom": [
            "department_code"
          ],
          "columnsTo": [
            "code"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.staff_profiles": {
      "name": "staff_profiles",
      "schema": "",
      "columns": {
        "staff_id": {
          "name": "staff_id",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": false
        },
        "auth_id": {
          "name": "auth_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "department_code": {
          "name": "department_code",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "staff_profiles_auth_id_user_id_fk": {
          "name": "staff_profiles_auth_id_user_id_fk",
          "tableFrom": "staff_profiles",
          "tableTo": "user",
          "columnsFrom": [
            "auth_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "staff_profiles_department_code_departments_code_fk": {
          "name": "staff_profiles_department_code_departments_code_fk",
          "tableFrom": "staff_profiles",
          "tableTo": "departments",
          "columnsFrom": [
            "department_code"
          ],
          "columnsTo": [
            "code"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "staff_profiles_staff_id_unique": {
          "name": "staff_profiles_staff_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "staff_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.academic_semesters": {
      "name": "academic_semesters",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "academic_year_name": {
          "name": "academic_year_name",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "sequence_number": {
          "name": "sequence_number",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "start_date": {
          "name": "start_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "end_date": {
          "name": "end_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "academic_semesters_academic_year_name_academic_years_year_name_fk": {
          "name": "academic_semesters_academic_year_name_academic_years_year_name_fk",
          "tableFrom": "academic_semesters",
          "tableTo": "academic_years",
          "columnsFrom": [
            "academic_year_name"
          ],
          "columnsTo": [
            "year_name"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "academic_semesters_name_unique": {
          "name": "academic_semesters_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.academic_years": {
      "name": "academic_years",
      "schema": "",
      "columns": {
        "year_name": {
          "name": "year_name",
          "type": "varchar(20)",
          "primaryKey": true,
          "notNull": true
        },
        "start_date": {
          "name": "start_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "end_date": {
          "name": "end_date",
          "type": "date",
          "primaryKey": false,
          "notNull": true
        },
        "is_current": {
          "name": "is_current",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.capstone_options": {
      "name": "capstone_options",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "first_semester_code": {
          "name": "first_semester_code",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": false
        },
        "second_semester_code": {
          "name": "second_semester_code",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": false
        },
        "requires_extra_elective": {
          "name": "requires_extra_elective",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "capstone_options_name_unique": {
          "name": "capstone_options_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.grade_types": {
      "name": "grade_types",
      "schema": "",
      "columns": {
        "grade": {
          "name": "grade",
          "type": "varchar(5)",
          "primaryKey": true,
          "notNull": true
        },
        "numeric_value": {
          "name": "numeric_value",
          "type": "numeric(3, 2)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_passing": {
          "name": "is_passing",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.math_tracks": {
      "name": "math_tracks",
      "schema": "",
      "columns": {
        "name": {
          "name": "name",
          "type": "varchar(50)",
          "primaryKey": true,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "required_courses_count": {
          "name": "required_courses_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.course_categories": {
      "name": "course_categories",
      "schema": "",
      "columns": {
        "name": {
          "name": "name",
          "type": "varchar(100)",
          "primaryKey": true,
          "notNull": true
        },
        "parent_category_name": {
          "name": "parent_category_name",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "display_order": {
          "name": "display_order",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.course_categorization": {
      "name": "course_categorization",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "course_code": {
          "name": "course_code",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "category_name": {
          "name": "category_name",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "major_group": {
          "name": "major_group",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": false
        },
        "math_track_name": {
          "name": "math_track_name",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "capstone_option_name": {
          "name": "capstone_option_name",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "is_required": {
          "name": "is_required",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "is_flexible": {
          "name": "is_flexible",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "recommended_year": {
          "name": "recommended_year",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "recommended_semester": {
          "name": "recommended_semester",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "applicable_from_cohort_year": {
          "name": "applicable_from_cohort_year",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "applicable_until_cohort_year": {
          "name": "applicable_until_cohort_year",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "course_categorization_course_code_courses_code_fk": {
          "name": "course_categorization_course_code_courses_code_fk",
          "tableFrom": "course_categorization",
          "tableTo": "courses",
          "columnsFrom": [
            "course_code"
          ],
          "columnsTo": [
            "code"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "course_categorization_category_name_course_categories_name_fk": {
          "name": "course_categorization_category_name_course_categories_name_fk",
          "tableFrom": "course_categorization",
          "tableTo": "course_categories",
          "columnsFrom": [
            "category_name"
          ],
          "columnsTo": [
            "name"
          ],
          "onDelete": "restrict",
          "onUpdate": "no action"
        },
        "course_categorization_math_track_name_math_tracks_name_fk": {
          "name": "course_categorization_math_track_name_math_tracks_name_fk",
          "tableFrom": "course_categorization",
          "tableTo": "math_tracks",
          "columnsFrom": [
            "math_track_name"
          ],
          "columnsTo": [
            "name"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "course_categorization_capstone_option_name_capstone_options_name_fk": {
          "name": "course_categorization_capstone_option_name_capstone_options_name_fk",
          "tableFrom": "course_categorization",
          "tableTo": "capstone_options",
          "columnsFrom": [
            "capstone_option_name"
          ],
          "columnsTo": [
            "name"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.course_code_history": {
      "name": "course_code_history",
      "schema": "",
      "columns": {
        "historical_code": {
          "name": "historical_code",
          "type": "varchar(20)",
          "primaryKey": true,
          "notNull": true
        },
        "current_code": {
          "name": "current_code",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "course_code_history_current_code_courses_code_fk": {
          "name": "course_code_history_current_code_courses_code_fk",
          "tableFrom": "course_code_history",
          "tableTo": "courses",
          "columnsFrom": [
            "current_code"
          ],
          "columnsTo": [
            "code"
          ],
          "onDelete": "restrict",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.course_grade_requirements": {
      "name": "course_grade_requirements",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "major_code": {
          "name": "major_code",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "course_code": {
          "name": "course_code",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "minimum_grade": {
          "name": "minimum_grade",
          "type": "varchar(2)",
          "primaryKey": false,
          "notNull": true
        },
        "applicable_from_cohort_year": {
          "name": "applicable_from_cohort_year",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "applicable_until_cohort_year": {
          "name": "applicable_until_cohort_year",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "description": {
          "name": "description",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "course_grade_requirements_major_code_majors_code_fk": {
          "name": "course_grade_requirements_major_code_majors_code_fk",
          "tableFrom": "course_grade_requirements",
          "tableTo": "majors",
          "columnsFrom": [
            "major_code"
          ],
          "columnsTo": [
            "code"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "course_grade_requirements_course_code_courses_code_fk": {
          "name": "course_grade_requirements_course_code_courses_code_fk",
          "tableFrom": "course_grade_requirements",
          "tableTo": "courses",
          "columnsFrom": [
            "course_code"
          ],
          "columnsTo": [
            "code"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.courses": {
      "name": "courses",
      "schema": "",
      "columns": {
        "department_code": {
          "name": "department_code",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "code": {
          "name": "code",
          "type": "varchar(20)",
          "primaryKey": true,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "credits": {
          "name": "credits",
          "type": "numeric(3, 1)",
          "primaryKey": false,
          "notNull": true
        },
        "level": {
          "name": "level",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "prerequisite_text": {
          "name": "prerequisite_text",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "course_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'active'"
        },
        "counts_for_gpa": {
          "name": "counts_for_gpa",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": true
        },
        "offered_in_semesters": {
          "name": "offered_in_semesters",
          "type": "semester_offering[]",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "courses_department_code_departments_code_fk": {
          "name": "courses_department_code_departments_code_fk",
          "tableFrom": "courses",
          "tableTo": "departments",
          "columnsFrom": [
            "department_code"
          ],
          "columnsTo": [
            "code"
          ],
          "onDelete": "restrict",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "courses_code_unique": {
          "name": "courses_code_unique",
          "nullsNotDistinct": false,
          "columns": [
            "code"
          ]
        },
        "courses_title_unique": {
          "name": "courses_title_unique",
          "nullsNotDistinct": false,
          "columns": [
            "title"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.degree_requirements": {
      "name": "degree_requirements",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "major_code": {
          "name": "major_code",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "category_name": {
          "name": "category_name",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "min_credits": {
          "name": "min_credits",
          "type": "numeric(4, 1)",
          "primaryKey": false,
          "notNull": true
        },
        "max_credits": {
          "name": "max_credits",
          "type": "numeric(4, 1)",
          "primaryKey": false,
          "notNull": false
        },
        "min_courses": {
          "name": "min_courses",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "max_courses": {
          "name": "max_courses",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "applicable_from_cohort_year": {
          "name": "applicable_from_cohort_year",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "applicable_until_cohort_year": {
          "name": "applicable_until_cohort_year",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "degree_requirements_major_code_majors_code_fk": {
          "name": "degree_requirements_major_code_majors_code_fk",
          "tableFrom": "degree_requirements",
          "tableTo": "majors",
          "columnsFrom": [
            "major_code"
          ],
          "columnsTo": [
            "code"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "degree_requirements_category_name_course_categories_name_fk": {
          "name": "degree_requirements_category_name_course_categories_name_fk",
          "tableFrom": "degree_requirements",
          "tableTo": "course_categories",
          "columnsFrom": [
            "category_name"
          ],
          "columnsTo": [
            "name"
          ],
          "onDelete": "restrict",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.placeholder_courses": {
      "name": "placeholder_courses",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "code": {
          "name": "code",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true
        },
        "title": {
          "name": "title",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "category_name": {
          "name": "category_name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "credits": {
          "name": "credits",
          "type": "numeric(3, 1)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "placeholder_courses_category_name_course_categories_name_fk": {
          "name": "placeholder_courses_category_name_course_categories_name_fk",
          "tableFrom": "placeholder_courses",
          "tableTo": "course_categories",
          "columnsFrom": [
            "category_name"
          ],
          "columnsTo": [
            "name"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.prerequisite_courses": {
      "name": "prerequisite_courses",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "group_key": {
          "name": "group_key",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "prerequisite_course_code": {
          "name": "prerequisite_course_code",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "prerequisite_courses_group_key_prerequisite_groups_group_key_fk": {
          "name": "prerequisite_courses_group_key_prerequisite_groups_group_key_fk",
          "tableFrom": "prerequisite_courses",
          "tableTo": "prerequisite_groups",
          "columnsFrom": [
            "group_key"
          ],
          "columnsTo": [
            "group_key"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "prerequisite_courses_prerequisite_course_code_courses_code_fk": {
          "name": "prerequisite_courses_prerequisite_course_code_courses_code_fk",
          "tableFrom": "prerequisite_courses",
          "tableTo": "courses",
          "columnsFrom": [
            "prerequisite_course_code"
          ],
          "columnsTo": [
            "code"
          ],
          "onDelete": "restrict",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.prerequisite_groups": {
      "name": "prerequisite_groups",
      "schema": "",
      "columns": {
        "group_key": {
          "name": "group_key",
          "type": "varchar(100)",
          "primaryKey": true,
          "notNull": true
        },
        "course_code": {
          "name": "course_code",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true
        },
        "group_name": {
          "name": "group_name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "external_logic_operator": {
          "name": "external_logic_operator",
          "type": "varchar(10)",
          "primaryKey": false,
          "notNull": true,
          "default": "'AND'"
        },
        "internal_logic_operator": {
          "name": "internal_logic_operator",
          "type": "varchar(10)",
          "primaryKey": false,
          "notNull": true,
          "default": "'OR'"
        },
        "is_concurrent": {
          "name": "is_concurrent",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "is_recommended": {
          "name": "is_recommended",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "group_minimum_grade": {
          "name": "group_minimum_grade",
          "type": "varchar(2)",
          "primaryKey": false,
          "notNull": false
        },
        "sort_order": {
          "name": "sort_order",
          "type": "integer",
          "primaryKey": false,
          "notNull": true,
          "default": 0
        },
        "non_course_requirement": {
          "name": "non_course_requirement",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "applicable_major_code": {
          "name": "applicable_major_code",
          "type": "varchar(10)",
          "primaryKey": false,
          "notNull": false
        },
        "cohort_year_start": {
          "name": "cohort_year_start",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "cohort_year_end": {
          "name": "cohort_year_end",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "prerequisite_groups_course_code_courses_code_fk": {
          "name": "prerequisite_groups_course_code_courses_code_fk",
          "tableFrom": "prerequisite_groups",
          "tableTo": "courses",
          "columnsFrom": [
            "course_code"
          ],
          "columnsTo": [
            "code"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.academic_warnings": {
      "name": "academic_warnings",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "student_id": {
          "name": "student_id",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true
        },
        "warning_type": {
          "name": "warning_type",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "course_code": {
          "name": "course_code",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": false
        },
        "semester_id": {
          "name": "semester_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "category_name": {
          "name": "category_name",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "severity": {
          "name": "severity",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true
        },
        "message": {
          "name": "message",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "recommendation": {
          "name": "recommendation",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "is_resolved": {
          "name": "is_resolved",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "resolution_notes": {
          "name": "resolution_notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "academic_warnings_student_id_student_profiles_student_id_fk": {
          "name": "academic_warnings_student_id_student_profiles_student_id_fk",
          "tableFrom": "academic_warnings",
          "tableTo": "student_profiles",
          "columnsFrom": [
            "student_id"
          ],
          "columnsTo": [
            "student_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "academic_warnings_course_code_courses_code_fk": {
          "name": "academic_warnings_course_code_courses_code_fk",
          "tableFrom": "academic_warnings",
          "tableTo": "courses",
          "columnsFrom": [
            "course_code"
          ],
          "columnsTo": [
            "code"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "academic_warnings_semester_id_academic_semesters_id_fk": {
          "name": "academic_warnings_semester_id_academic_semesters_id_fk",
          "tableFrom": "academic_warnings",
          "tableTo": "academic_semesters",
          "columnsFrom": [
            "semester_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "academic_warnings_category_name_course_categories_name_fk": {
          "name": "academic_warnings_category_name_course_categories_name_fk",
          "tableFrom": "academic_warnings",
          "tableTo": "course_categories",
          "columnsFrom": [
            "category_name"
          ],
          "columnsTo": [
            "name"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.student_courses": {
      "name": "student_courses",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "auth_id": {
          "name": "auth_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "student_id": {
          "name": "student_id",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": false
        },
        "course_code": {
          "name": "course_code",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": false
        },
        "original_course_code": {
          "name": "original_course_code",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": false
        },
        "course_title": {
          "name": "course_title",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "semester_id": {
          "name": "semester_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "student_course_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "grade": {
          "name": "grade",
          "type": "varchar(5)",
          "primaryKey": false,
          "notNull": false
        },
        "category_name": {
          "name": "category_name",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "original_category_name": {
          "name": "original_category_name",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "notes": {
          "name": "notes",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "placeholder_title": {
          "name": "placeholder_title",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "placeholder_credits": {
          "name": "placeholder_credits",
          "type": "numeric(3, 1)",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {
        "idx_student_courses_student_semester": {
          "name": "idx_student_courses_student_semester",
          "columns": [
            {
              "expression": "student_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            },
            {
              "expression": "semester_id",
              "isExpression": false,
              "asc": false,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {
            "fillfactor": 90
          }
        },
        "idx_student_courses_category": {
          "name": "idx_student_courses_category",
          "columns": [
            {
              "expression": "category_name",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"student_courses\".\"category_name\" IS NOT NULL",
          "concurrently": false,
          "method": "btree",
          "with": {}
        },
        "idx_student_courses_status": {
          "name": "idx_student_courses_status",
          "columns": [
            {
              "expression": "status",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "where": "\"student_courses\".\"status\" <> 'dropped'",
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "student_courses_auth_id_user_id_fk": {
          "name": "student_courses_auth_id_user_id_fk",
          "tableFrom": "student_courses",
          "tableTo": "user",
          "columnsFrom": [
            "auth_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "student_courses_student_id_student_profiles_student_id_fk": {
          "name": "student_courses_student_id_student_profiles_student_id_fk",
          "tableFrom": "student_courses",
          "tableTo": "student_profiles",
          "columnsFrom": [
            "student_id"
          ],
          "columnsTo": [
            "student_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "student_courses_semester_id_academic_semesters_id_fk": {
          "name": "student_courses_semester_id_academic_semesters_id_fk",
          "tableFrom": "student_courses",
          "tableTo": "academic_semesters",
          "columnsFrom": [
            "semester_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "restrict",
          "onUpdate": "no action"
        },
        "student_courses_grade_grade_types_grade_fk": {
          "name": "student_courses_grade_grade_types_grade_fk",
          "tableFrom": "student_courses",
          "tableTo": "grade_types",
          "columnsFrom": [
            "grade"
          ],
          "columnsTo": [
            "grade"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "student_courses_category_name_course_categories_name_fk": {
          "name": "student_courses_category_name_course_categories_name_fk",
          "tableFrom": "student_courses",
          "tableTo": "course_categories",
          "columnsFrom": [
            "category_name"
          ],
          "columnsTo": [
            "name"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "student_courses_original_category_name_course_categories_name_fk": {
          "name": "student_courses_original_category_name_course_categories_name_fk",
          "tableFrom": "student_courses",
          "tableTo": "course_categories",
          "columnsFrom": [
            "original_category_name"
          ],
          "columnsTo": [
            "name"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.student_profiles": {
      "name": "student_profiles",
      "schema": "",
      "columns": {
        "student_id": {
          "name": "student_id",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": false
        },
        "auth_id": {
          "name": "auth_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "major_code": {
          "name": "major_code",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "math_track_name": {
          "name": "math_track_name",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "entry_year": {
          "name": "entry_year",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "cohort_year": {
          "name": "cohort_year",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "current_year": {
          "name": "current_year",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "current_semester": {
          "name": "current_semester",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": false
        },
        "expected_graduation_date": {
          "name": "expected_graduation_date",
          "type": "date",
          "primaryKey": false,
          "notNull": false
        },
        "cumulative_gpa": {
          "name": "cumulative_gpa",
          "type": "numeric(3, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "total_credits_earned": {
          "name": "total_credits_earned",
          "type": "numeric(5, 1)",
          "primaryKey": false,
          "notNull": false,
          "default": "'0'"
        },
        "capstone_option_name": {
          "name": "capstone_option_name",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "is_active": {
          "name": "is_active",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "student_profiles_auth_id_user_id_fk": {
          "name": "student_profiles_auth_id_user_id_fk",
          "tableFrom": "student_profiles",
          "tableTo": "user",
          "columnsFrom": [
            "auth_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "student_profiles_major_code_majors_code_fk": {
          "name": "student_profiles_major_code_majors_code_fk",
          "tableFrom": "student_profiles",
          "tableTo": "majors",
          "columnsFrom": [
            "major_code"
          ],
          "columnsTo": [
            "code"
          ],
          "onDelete": "restrict",
          "onUpdate": "no action"
        },
        "student_profiles_math_track_name_math_tracks_name_fk": {
          "name": "student_profiles_math_track_name_math_tracks_name_fk",
          "tableFrom": "student_profiles",
          "tableTo": "math_tracks",
          "columnsFrom": [
            "math_track_name"
          ],
          "columnsTo": [
            "name"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        },
        "student_profiles_capstone_option_name_capstone_options_name_fk": {
          "name": "student_profiles_capstone_option_name_capstone_options_name_fk",
          "tableFrom": "student_profiles",
          "tableTo": "capstone_options",
          "columnsFrom": [
            "capstone_option_name"
          ],
          "columnsTo": [
            "name"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "student_profiles_student_id_unique": {
          "name": "student_profiles_student_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "student_id"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.student_semester_mappings": {
      "name": "student_semester_mappings",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "student_id": {
          "name": "student_id",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true
        },
        "auth_id": {
          "name": "auth_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "academic_semester_id": {
          "name": "academic_semester_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "program_year": {
          "name": "program_year",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "program_semester": {
          "name": "program_semester",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "is_summer": {
          "name": "is_summer",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "is_verified": {
          "name": "is_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "student_semester_mappings_student_id_student_profiles_student_id_fk": {
          "name": "student_semester_mappings_student_id_student_profiles_student_id_fk",
          "tableFrom": "student_semester_mappings",
          "tableTo": "student_profiles",
          "columnsFrom": [
            "student_id"
          ],
          "columnsTo": [
            "student_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "student_semester_mappings_auth_id_student_profiles_auth_id_fk": {
          "name": "student_semester_mappings_auth_id_student_profiles_auth_id_fk",
          "tableFrom": "student_semester_mappings",
          "tableTo": "student_profiles",
          "columnsFrom": [
            "auth_id"
          ],
          "columnsTo": [
            "auth_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "student_semester_mappings_academic_semester_id_academic_semesters_id_fk": {
          "name": "student_semester_mappings_academic_semester_id_academic_semesters_id_fk",
          "tableFrom": "student_semester_mappings",
          "tableTo": "academic_semesters",
          "columnsFrom": [
            "academic_semester_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.transcript_imports": {
      "name": "transcript_imports",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "student_id": {
          "name": "student_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "file_name": {
          "name": "file_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "file_url": {
          "name": "file_url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "file_type": {
          "name": "file_type",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "file_size": {
          "name": "file_size",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "extracted_major": {
          "name": "extracted_major",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "import_status": {
          "name": "import_status",
          "type": "import_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "verification_status": {
          "name": "verification_status",
          "type": "verification_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'not_required'"
        },
        "requires_verification": {
          "name": "requires_verification",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "semester_count": {
          "name": "semester_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "processed_courses_count": {
          "name": "processed_courses_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "successfully_imported_count": {
          "name": "successfully_imported_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "failed_count": {
          "name": "failed_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "import_data": {
          "name": "import_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "new_semesters_count": {
          "name": "new_semesters_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "updated_semesters_count": {
          "name": "updated_semesters_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "new_courses_count": {
          "name": "new_courses_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "updated_courses_count": {
          "name": "updated_courses_count",
          "type": "integer",
          "primaryKey": false,
          "notNull": false,
          "default": 0
        },
        "is_update": {
          "name": "is_update",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.transcript_processing_steps": {
      "name": "transcript_processing_steps",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "import_id": {
          "name": "import_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "step_name": {
          "name": "step_name",
          "type": "processing_step",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "step_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "started_at": {
          "name": "started_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "completed_at": {
          "name": "completed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "details": {
          "name": "details",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "transcript_processing_steps_import_id_transcript_imports_id_fk": {
          "name": "transcript_processing_steps_import_id_transcript_imports_id_fk",
          "tableFrom": "transcript_processing_steps",
          "tableTo": "transcript_imports",
          "columnsFrom": [
            "import_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.transcript_verifications": {
      "name": "transcript_verifications",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "import_id": {
          "name": "import_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "verification_token": {
          "name": "verification_token",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "verification_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'pending'"
        },
        "verified_at": {
          "name": "verified_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "original_mappings": {
          "name": "original_mappings",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "updated_mappings": {
          "name": "updated_mappings",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "user_notes": {
          "name": "user_notes",
          "type": "varchar(500)",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "transcript_verifications_import_id_transcript_imports_id_fk": {
          "name": "transcript_verifications_import_id_transcript_imports_id_fk",
          "tableFrom": "transcript_verifications",
          "tableTo": "transcript_imports",
          "columnsFrom": [
            "import_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.petition_courses": {
      "name": "petition_courses",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "petition_id": {
          "name": "petition_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "course_code": {
          "name": "course_code",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true
        },
        "action": {
          "name": "action",
          "type": "petition_course_action",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "reason": {
          "name": "reason",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "current_grade": {
          "name": "current_grade",
          "type": "varchar(5)",
          "primaryKey": false,
          "notNull": false
        },
        "target_semester_id": {
          "name": "target_semester_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "petition_courses_petition_id_petitions_id_fk": {
          "name": "petition_courses_petition_id_petitions_id_fk",
          "tableFrom": "petition_courses",
          "tableTo": "petitions",
          "columnsFrom": [
            "petition_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "petition_courses_course_code_courses_code_fk": {
          "name": "petition_courses_course_code_courses_code_fk",
          "tableFrom": "petition_courses",
          "tableTo": "courses",
          "columnsFrom": [
            "course_code"
          ],
          "columnsTo": [
            "code"
          ],
          "onDelete": "restrict",
          "onUpdate": "no action"
        },
        "petition_courses_target_semester_id_academic_semesters_id_fk": {
          "name": "petition_courses_target_semester_id_academic_semesters_id_fk",
          "tableFrom": "petition_courses",
          "tableTo": "academic_semesters",
          "columnsFrom": [
            "target_semester_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.petition_documents": {
      "name": "petition_documents",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "petition_id": {
          "name": "petition_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "document_type": {
          "name": "document_type",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "file_key": {
          "name": "file_key",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "file_url": {
          "name": "file_url",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "file_name": {
          "name": "file_name",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "uploaded_by": {
          "name": "uploaded_by",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "petition_documents_petition_id_petitions_id_fk": {
          "name": "petition_documents_petition_id_petitions_id_fk",
          "tableFrom": "petition_documents",
          "tableTo": "petitions",
          "columnsFrom": [
            "petition_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.petition_messages": {
      "name": "petition_messages",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "petition_id": {
          "name": "petition_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "message": {
          "name": "message",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_admin_only": {
          "name": "is_admin_only",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "petition_messages_petition_id_petitions_id_fk": {
          "name": "petition_messages_petition_id_petitions_id_fk",
          "tableFrom": "petition_messages",
          "tableTo": "petitions",
          "columnsFrom": [
            "petition_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "petition_messages_user_id_user_id_fk": {
          "name": "petition_messages_user_id_user_id_fk",
          "tableFrom": "petition_messages",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.petition_notifications": {
      "name": "petition_notifications",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "recipient_user_id": {
          "name": "recipient_user_id",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "petition_id": {
          "name": "petition_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "type": {
          "name": "type",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "message": {
          "name": "message",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_read": {
          "name": "is_read",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "sequence_number": {
          "name": "sequence_number",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "petition_notifications_petition_id_petitions_id_fk": {
          "name": "petition_notifications_petition_id_petitions_id_fk",
          "tableFrom": "petition_notifications",
          "tableTo": "petitions",
          "columnsFrom": [
            "petition_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.petition_participants": {
      "name": "petition_participants",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "petition_id": {
          "name": "petition_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "participant_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "is_notified": {
          "name": "is_notified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "added_by": {
          "name": "added_by",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "last_viewed_at": {
          "name": "last_viewed_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "petition_participants_petition_id_petitions_id_fk": {
          "name": "petition_participants_petition_id_petitions_id_fk",
          "tableFrom": "petition_participants",
          "tableTo": "petitions",
          "columnsFrom": [
            "petition_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.petition_types": {
      "name": "petition_types",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "code": {
          "name": "code",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "requires_parent_signature": {
          "name": "requires_parent_signature",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "requires_lecturer_signature": {
          "name": "requires_lecturer_signature",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "requires_academic_plan": {
          "name": "requires_academic_plan",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "custom_fields": {
          "name": "custom_fields",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "petition_types_code_unique": {
          "name": "petition_types_code_unique",
          "nullsNotDistinct": false,
          "columns": [
            "code"
          ]
        },
        "petition_types_name_unique": {
          "name": "petition_types_name_unique",
          "nullsNotDistinct": false,
          "columns": [
            "name"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.petition_workflow_steps": {
      "name": "petition_workflow_steps",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "petition_id": {
          "name": "petition_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "participant_role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true
        },
        "order_index": {
          "name": "order_index",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "is_mandatory": {
          "name": "is_mandatory",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": true
        },
        "is_current": {
          "name": "is_current",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "status": {
          "name": "status",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": false
        },
        "action_user_id": {
          "name": "action_user_id",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "action_date": {
          "name": "action_date",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "comments": {
          "name": "comments",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "petition_workflow_steps_petition_id_petitions_id_fk": {
          "name": "petition_workflow_steps_petition_id_petitions_id_fk",
          "tableFrom": "petition_workflow_steps",
          "tableTo": "petitions",
          "columnsFrom": [
            "petition_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.petitions": {
      "name": "petitions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "reference_number": {
          "name": "reference_number",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true
        },
        "student_id": {
          "name": "student_id",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true
        },
        "petition_type_id": {
          "name": "petition_type_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "semester_id": {
          "name": "semester_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "petition_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'draft'"
        },
        "title": {
          "name": "title",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "academic_plan_included": {
          "name": "academic_plan_included",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "primary_department_id": {
          "name": "primary_department_id",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "secondary_department_id": {
          "name": "secondary_department_id",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "signed_document_url": {
          "name": "signed_document_url",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "custom_data": {
          "name": "custom_data",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "petitions_student_id_student_profiles_student_id_fk": {
          "name": "petitions_student_id_student_profiles_student_id_fk",
          "tableFrom": "petitions",
          "tableTo": "student_profiles",
          "columnsFrom": [
            "student_id"
          ],
          "columnsTo": [
            "student_id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "petitions_petition_type_id_petition_types_id_fk": {
          "name": "petitions_petition_type_id_petition_types_id_fk",
          "tableFrom": "petitions",
          "tableTo": "petition_types",
          "columnsFrom": [
            "petition_type_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "restrict",
          "onUpdate": "no action"
        },
        "petitions_semester_id_academic_semesters_id_fk": {
          "name": "petitions_semester_id_academic_semesters_id_fk",
          "tableFrom": "petitions",
          "tableTo": "academic_semesters",
          "columnsFrom": [
            "semester_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "restrict",
          "onUpdate": "no action"
        },
        "petitions_primary_department_id_departments_code_fk": {
          "name": "petitions_primary_department_id_departments_code_fk",
          "tableFrom": "petitions",
          "tableTo": "departments",
          "columnsFrom": [
            "primary_department_id"
          ],
          "columnsTo": [
            "code"
          ],
          "onDelete": "restrict",
          "onUpdate": "no action"
        },
        "petitions_secondary_department_id_departments_code_fk": {
          "name": "petitions_secondary_department_id_departments_code_fk",
          "tableFrom": "petitions",
          "tableTo": "departments",
          "columnsFrom": [
            "secondary_department_id"
          ],
          "columnsTo": [
            "code"
          ],
          "onDelete": "set null",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "petitions_reference_number_unique": {
          "name": "petitions_reference_number_unique",
          "nullsNotDistinct": false,
          "columns": [
            "reference_number"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.account": {
      "name": "account",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "account_id": {
          "name": "account_id",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "access_token": {
          "name": "access_token",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token": {
          "name": "refresh_token",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "id_token": {
          "name": "id_token",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "access_token_expires_at": {
          "name": "access_token_expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "refresh_token_expires_at": {
          "name": "refresh_token_expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": false
        },
        "scope": {
          "name": "scope",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "password": {
          "name": "password",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "account_user_id_user_id_fk": {
          "name": "account_user_id_user_id_fk",
          "tableFrom": "account",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.session": {
      "name": "session",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "token": {
          "name": "token",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "ip_address": {
          "name": "ip_address",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "session_user_id_user_id_fk": {
          "name": "session_user_id_user_id_fk",
          "tableFrom": "session",
          "tableTo": "user",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.user": {
      "name": "user",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "email": {
          "name": "email",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "email_verified": {
          "name": "email_verified",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "image": {
          "name": "image",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "user_type": {
          "name": "user_type",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": true,
          "default": "'student'"
        },
        "role": {
          "name": "role",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true,
          "default": "'student'"
        },
        "onboarding_completed": {
          "name": "onboarding_completed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "user_email_unique": {
          "name": "user_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      },
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.verification": {
      "name": "verification",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "identifier": {
          "name": "identifier",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.activities": {
      "name": "activities",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "type": {
          "name": "type",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "actor_id": {
          "name": "actor_id",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": true
        },
        "actor_type": {
          "name": "actor_type",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "actor_role": {
          "name": "actor_role",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "resource_type": {
          "name": "resource_type",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "resource_id": {
          "name": "resource_id",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        },
        "ip_address": {
          "name": "ip_address",
          "type": "varchar(50)",
          "primaryKey": false,
          "notNull": false
        },
        "user_agent": {
          "name": "user_agent",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "location": {
          "name": "location",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true,
          "default": "'started'"
        },
        "metadata": {
          "name": "metadata",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "is_sensitive": {
          "name": "is_sensitive",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false,
          "default": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "completed_at": {
          "name": "completed_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.error_logs": {
      "name": "error_logs",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "activity_id": {
          "name": "activity_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "name": {
          "name": "name",
          "type": "varchar(100)",
          "primaryKey": false,
          "notNull": false
        },
        "message": {
          "name": "message",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "stack": {
          "name": "stack",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "code": {
          "name": "code",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false,
          "default": "'unhandled'"
        },
        "context": {
          "name": "context",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.system_configurations": {
      "name": "system_configurations",
      "schema": "",
      "columns": {
        "key": {
          "name": "key",
          "type": "varchar(50)",
          "primaryKey": true,
          "notNull": true
        },
        "value": {
          "name": "value",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {},
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.course_status": {
      "name": "course_status",
      "schema": "public",
      "values": [
        "active",
        "archived",
        "development"
      ]
    },
    "public.major_group": {
      "name": "major_group",
      "schema": "public",
      "values": [
        "ALL",
        "CS",
        "NON-ENG",
        "MIS",
        "BA",
        "ENG",
        "CE",
        "EE",
        "ME"
      ]
    },
    "public.semester_offering": {
      "name": "semester_offering",
      "schema": "public",
      "values": [
        "fall",
        "spring",
        "summer"
      ]
    },
    "public.student_course_status": {
      "name": "student_course_status",
      "schema": "public",
      "values": [
        "verified",
        "enrolled",
        "planned",
        "retake_required",
        "imported",
        "dropped",
        "failed"
      ]
    },
    "public.import_status": {
      "name": "import_status",
      "schema": "public",
      "values": [
        "pending",
        "processing",
        "extracting",
        "mapping",
        "verifying",
        "importing",
        "success",
        "partial",
        "failed",
        "cancelled",
        "awaiting_verification"
      ]
    },
    "public.processing_step": {
      "name": "processing_step",
      "schema": "public",
      "values": [
        "file_validation",
        "extraction",
        "student_identification",
        "semester_mapping",
        "course_validation",
        "categorization",
        "grade_analysis",
        "requirements_mapping",
        "database_integration",
        "verification",
        "completion"
      ]
    },
    "public.step_status": {
      "name": "step_status",
      "schema": "public",
      "values": [
        "pending",
        "in_progress",
        "completed",
        "failed",
        "warning",
        "skipped",
        "awaiting_user_input"
      ]
    },
    "public.verification_status": {
      "name": "verification_status",
      "schema": "public",
      "values": [
        "not_required",
        "pending",
        "approved",
        "rejected",
        "modified"
      ]
    },
    "public.participant_role": {
      "name": "participant_role",
      "schema": "public",
      "values": [
        "student",
        "academic_advisor",
        "hod",
        "provost",
        "registry",
        "invited_approver",
        "observer"
      ]
    },
    "public.petition_course_action": {
      "name": "petition_course_action",
      "schema": "public",
      "values": [
        "add",
        "drop",
        "retake",
        "audit",
        "waive_prerequisite",
        "substitute"
      ]
    },
    "public.petition_status": {
      "name": "petition_status",
      "schema": "public",
      "values": [
        "draft",
        "submitted",
        "advisor_approved",
        "advisor_rejected",
        "hod_approved",
        "hod_rejected",
        "provost_approved",
        "provost_rejected",
        "registry_processing",
        "completed",
        "cancelled"
      ]
    },
    "public.staff_role": {
      "name": "staff_role",
      "schema": "public",
      "values": [
        "academic_advisor",
        "hod",
        "provost",
        "registry",
        "lecturer",
        "student"
      ]
    },
    "public.user_type": {
      "name": "user_type",
      "schema": "public",
      "values": [
        "student",
        "staff"
      ]
    },
    "public.user_activity_status": {
      "name": "user_activity_status",
      "schema": "public",
      "values": [
        "started",
        "succeeded",
        "failed",
        "partial"
      ]
    },
    "public.error_severity": {
      "name": "error_severity",
      "schema": "public",
      "values": [
        "info",
        "warning",
        "error",
        "critical",
        "high",
        "low",
        "medium"
      ]
    },
    "public.error_source": {
      "name": "error_source",
      "schema": "public",
      "values": [
        "client",
        "server",
        "database",
        "api",
        "auth",
        "unknown"
      ]
    },
    "public.error_status": {
      "name": "error_status",
      "schema": "public",
      "values": [
        "unhandled",
        "handled",
        "suppressed",
        "critical"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {
    "public.student_course_categorized_status_view": {
      "columns": {
        "student_course_id": {
          "name": "student_course_id",
          "type": "varchar",
          "primaryKey": true,
          "notNull": true
        },
        "auth_id": {
          "name": "auth_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "student_id": {
          "name": "student_id",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "semester_id": {
          "name": "semester_id",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "year_taken": {
          "name": "year_taken",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "semester_taken": {
          "name": "semester_taken",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "was_summer_semester": {
          "name": "was_summer_semester",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "course_code": {
          "name": "course_code",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "parent_category": {
          "name": "parent_category",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "category_name": {
          "name": "category_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "sub_category": {
          "name": "sub_category",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "credits": {
          "name": "credits",
          "type": "numeric",
          "primaryKey": false,
          "notNull": false
        },
        "grade": {
          "name": "grade",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "grade_numeric_value": {
          "name": "grade_numeric_value",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "minimum_grade_required": {
          "name": "minimum_grade_required",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "min_numeric_value_required": {
          "name": "min_numeric_value_required",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "passed": {
          "name": "passed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "retake_needed": {
          "name": "retake_needed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "voluntary_retake_possible": {
          "name": "voluntary_retake_possible",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "total_attempts": {
          "name": "total_attempts",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "retake_limit_reached": {
          "name": "retake_limit_reached",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "is_latest_attempt": {
          "name": "is_latest_attempt",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "department_code": {
          "name": "department_code",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "department_name": {
          "name": "department_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "course_title": {
          "name": "course_title",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "definition": "\nWITH all_courses AS (\n  SELECT \n    scsv.*,\n    CASE\n      When(scsv.course_title ILIKE '%africa%' OR scsv.course_title ILIKE '%ghana%'  OR scsv.course_title ILIKE '%politics%')\n        THEN 'Africana'\n      ELSE scsv.category_name\n    END AS detailed_category\n  FROM student_course_status_view scsv\n),\n\ncategory_requirements AS (\n  SELECT\n    src.student_id,\n    src.parent_category,\n    src.category_name,\n    CASE\n      WHEN src.category_name = 'Non-Major Electives' \n      THEN src.sub_category  -- Preserve sub-category hierarchy\n      ELSE src.category_name\n    END AS requirement_category\n  FROM student_required_courses_view src\n),\n\nprioritized_courses AS (\n  SELECT\n    ac.*,\n    COALESCE(cr.requirement_category, 'General Elective') AS requirement_category,\n    cr.parent_category,\n    CASE\n      -- Highest priority: Africana sub-category\n      WHEN ac.detailed_category = 'Africana' THEN 1\n      -- Second priority: Free Elective sub-category\n      WHEN cr.requirement_category = 'Free Elective' THEN 2\n      -- Third priority: Major-related categories\n      WHEN cr.parent_category = 'MAJOR' THEN 3\n      ELSE 4\n    END AS assignment_priority\n  FROM all_courses ac\n  LEFT JOIN category_requirements cr\n    ON ac.student_id = cr.student_id\n    AND (\n      ac.detailed_category = cr.requirement_category\n      OR (ac.detailed_category IS NULL AND cr.requirement_category = 'Non-Major Electives')\n    )\n),\n\nassigned_courses AS (\n  SELECT DISTINCT ON (student_course_id)\n    *,\n    FIRST_VALUE(requirement_category) OVER (\n      PARTITION BY student_id, course_title\n      ORDER BY assignment_priority\n    ) AS final_sub_category  -- This is the critical rename\n  FROM prioritized_courses\n),\n\nelective_fulfillment AS (\n  SELECT\n    student_id,\n    COUNT(*) FILTER (\n      WHERE passed AND final_sub_category = 'Major Electives'  -- Fixed here\n    ) AS major_electives_fulfilled,\n    COUNT(*) FILTER (\n      WHERE passed AND final_sub_category = 'Non-Major Electives'  -- Fixed here\n    ) AS non_major_electives_fulfilled,\n    COUNT(*) FILTER (\n      WHERE passed AND final_sub_category = 'Africana'  -- Fixed here\n    ) AS africana_fulfilled\n  FROM assigned_courses\n  GROUP BY student_id\n),\n\nfree_elective_assignments AS (\n  SELECT\n    ac.student_course_id,\n    CASE\n      WHEN sp.major_code = 'MIS'\n        AND ef.major_electives_fulfilled >= 2\n        AND ef.non_major_electives_fulfilled >= 2\n        AND ef.africana_fulfilled >= 1\n        AND ROW_NUMBER() OVER (\n          PARTITION BY ac.student_id\n          ORDER BY ac.year_taken, ac.semester_taken\n        ) = 1\n      THEN 'Free Elective'\n    END AS free_elective_candidate\n  FROM assigned_courses ac\n  JOIN student_profiles sp ON ac.student_id = sp.student_id\n  JOIN elective_fulfillment ef ON ac.student_id = ef.student_id\n  WHERE ac.passed\n    AND ac.final_sub_category IN ('General Elective', 'Non-Major Electives')  -- Fixed here\n)\n\nSELECT\n  -- Original fields\n  ac.student_course_id,\n  ac.auth_id,\n  ac.student_id,\n  ac.semester_id,\n  ac.status,\n  ac.year_taken,\n  ac.semester_taken,\n  ac.was_summer_semester,\n  ac.course_code,\n  ac.credits,\n  ac.grade,\n  ac.grade_numeric_value,\n  ac.minimum_grade_required,\n  ac.min_numeric_value_required,\n  ac.passed,\n  ac.retake_needed,\n  ac.voluntary_retake_possible,\n  ac.total_attempts,\n  ac.retake_limit_reached,\n  ac.is_latest_attempt,\n  ac.department_code,\n  ac.department_name,\n  ac.course_title,\n  \n  -- Corrected categorization hierarchy\n  CASE\n    WHEN ac.parent_category = 'MAJOR' THEN 'MAJOR'\n    ELSE 'LIBERAL ARTS & SCIENCES CORE'\n  END AS parent_category,\n  \n  CASE\n    WHEN ac.final_sub_category IN ('Africana', 'Free Elective') \n    THEN 'Non-Major Electives'\n    ELSE ac.final_sub_category\n  END AS category_name,\n  \n  CASE\n    WHEN ac.final_sub_category IN ('Africana', 'Free Elective', 'Non-Major Electives')\n    THEN ac.final_sub_category\n    ELSE NULL\n  END AS sub_category\n\nFROM assigned_courses ac\nLEFT JOIN free_elective_assignments fea\n  ON ac.student_course_id = fea.student_course_id\nORDER BY ac.student_id, ac.year_taken, ac.semester_taken\n",
      "name": "student_course_categorized_status_view",
      "schema": "public",
      "isExisting": false,
      "materialized": false
    },
    "public.student_course_status_view": {
      "columns": {
        "student_course_id": {
          "name": "student_course_id",
          "type": "varchar",
          "primaryKey": true,
          "notNull": true
        },
        "auth_id": {
          "name": "auth_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "student_id": {
          "name": "student_id",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "semester_id": {
          "name": "semester_id",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "year_taken": {
          "name": "year_taken",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "semester_taken": {
          "name": "semester_taken",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "was_summer_semester": {
          "name": "was_summer_semester",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "course_code": {
          "name": "course_code",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "status": {
          "name": "status",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "category_name": {
          "name": "category_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "credits": {
          "name": "credits",
          "type": "numeric",
          "primaryKey": false,
          "notNull": false
        },
        "grade": {
          "name": "grade",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "grade_numeric_value": {
          "name": "grade_numeric_value",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "minimum_grade_required": {
          "name": "minimum_grade_required",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "min_numeric_value_required": {
          "name": "min_numeric_value_required",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "passed": {
          "name": "passed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "retake_needed": {
          "name": "retake_needed",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "voluntary_retake_possible": {
          "name": "voluntary_retake_possible",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "total_attempts": {
          "name": "total_attempts",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "retake_limit_reached": {
          "name": "retake_limit_reached",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "is_latest_attempt": {
          "name": "is_latest_attempt",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "department_code": {
          "name": "department_code",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "department_name": {
          "name": "department_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "course_title": {
          "name": "course_title",
          "type": "varchar(255)",
          "primaryKey": false,
          "notNull": false
        }
      },
      "definition": "\nWITH attempt_ranking AS (\n  SELECT \n    sc.id AS student_course_id,\n    sc.student_id,\n    sc.course_code,\n    ROW_NUMBER() OVER (\n      PARTITION BY sc.student_id, sc.course_code \n      ORDER BY ac.start_date DESC\n    ) AS row_num\n  FROM student_courses sc\n  JOIN academic_semesters ac ON sc.semester_id = ac.id\n),\ncourse_attempts AS (\n  SELECT\n    sc.student_id,\n    sc.course_code,\n    COUNT(*) AS total_attempts\n  FROM student_courses sc\n  GROUP BY sc.student_id, sc.course_code\n),\ncourse_category AS (\n  SELECT \n    cc.course_code,\n    sp.student_id,\n    sp.auth_id,\n    COALESCE(cc.category_name, 'Non-Major Electives') AS category_name,\n    ROW_NUMBER() OVER (\n      PARTITION BY cc.course_code, sp.student_id\n      ORDER BY \n        CASE\n          WHEN cc.major_group = sp.major_code THEN 1\n          WHEN cc.major_group = 'ALL' THEN 2\n          ELSE 3\n        END\n    ) AS row_priority\n  FROM student_profiles sp\n  JOIN course_categorization cc \n    ON cc.major_group IN (\n      CASE \n        WHEN sp.major_code IN ('CE','EE','ME') THEN 'ENG'\n        ELSE 'NON-ENG'\n      END,\n      sp.major_code,\n      'ALL'\n    )\n  WHERE cc.course_code IS NOT NULL\n),\ncategorized_course AS (\n  SELECT course_code, student_id, category_name\n  FROM course_category\n  WHERE row_priority = 1\n),\nprerequisite_courses AS (\n  SELECT DISTINCT prerequisite_course_code AS course_code\n  FROM prerequisite_courses\n)\nSELECT\n  sc.id AS student_course_id,\n  sp.auth_id,\n  sc.student_id,\n  sc.semester_id,\n  ssm.program_year AS year_taken,\n  ssm.program_semester AS semester_taken,\n  ssm.is_summer AS was_summer_semester,\n  COALESCE(sc.original_course_code, sc.course_code) AS course_code,\n  sc.status,\n  COALESCE(sc.category_name, cc.category_name, 'Non-Major Electives') AS category_name,\n  COALESCE(sc.placeholder_credits, c.credits) AS credits,\n  c.department_code,\n  COALESCE(d.name, 'Planned') AS department_name,\n  COALESCE(c.title, sc.course_title, sc.placeholder_title, 'Planned Course') AS course_title,\n  sc.grade,\n  gt.numeric_value AS grade_numeric_value,\n  CASE\n    WHEN sc.grade = 'P' THEN 'P'\n    WHEN cgr.minimum_grade IS NOT NULL THEN cgr.minimum_grade\n    WHEN EXISTS (SELECT 1 FROM prerequisite_courses pc WHERE pc.course_code = sc.course_code)\n      OR COALESCE(sc.category_name, cc.category_name, '') = 'Required Major Classes'\n      THEN 'D+'\n    ELSE 'D'\n  END AS minimum_grade_required,\n  CASE\n    WHEN sc.grade = 'P' THEN NULL\n    WHEN cgr.minimum_grade IS NOT NULL THEN \n      (SELECT numeric_value FROM grade_types WHERE grade = cgr.minimum_grade)\n    WHEN EXISTS (SELECT 1 FROM prerequisite_courses pc WHERE pc.course_code = sc.course_code)\n      OR COALESCE(sc.category_name, cc.category_name, '') = 'Required Major Classes'\n      THEN (SELECT numeric_value FROM grade_types WHERE grade = 'D+')\n    ELSE (SELECT numeric_value FROM grade_types WHERE grade = 'D')\n  END AS min_numeric_value_required,\n  CASE\n    WHEN sc.status = 'planned' THEN NULL\n    ELSE NOT (\n      CASE\n        WHEN sc.grade = 'P' THEN false\n        WHEN cgr.minimum_grade IS NOT NULL THEN \n          COALESCE(gt.numeric_value, 0) < (\n            SELECT numeric_value FROM grade_types WHERE grade = cgr.minimum_grade\n          )\n        WHEN EXISTS (SELECT 1 FROM prerequisite_courses pc WHERE pc.course_code = sc.course_code)\n          OR COALESCE(sc.category_name, cc.category_name, '') = 'Required Major Classes'\n          THEN sc.grade IN ('D', 'E', 'I')\n        ELSE sc.grade IN ('E', 'I')\n      END\n    )\n  END AS passed,\n  CASE\n    WHEN sc.status = 'planned' THEN false\n    WHEN sc.grade = 'P' THEN false\n    WHEN cgr.minimum_grade IS NOT NULL THEN \n      COALESCE(gt.numeric_value, 0) < (\n        SELECT numeric_value FROM grade_types WHERE grade = cgr.minimum_grade\n      )\n    WHEN EXISTS (SELECT 1 FROM prerequisite_courses pc WHERE pc.course_code = sc.course_code)\n      OR COALESCE(sc.category_name, cc.category_name, '') = 'Required Major Classes'\n      THEN sc.grade IN ('D', 'E', 'I')\n    ELSE sc.grade IN ('E', 'I')\n  END AS retake_needed,\n  CASE\n    WHEN sc.status = 'planned' THEN false\n    WHEN COALESCE(ca.total_attempts, 0) >= 3 THEN false\n    WHEN sc.grade IN ('D+', 'D') AND NOT (\n      CASE\n        WHEN cgr.minimum_grade IS NOT NULL THEN \n          COALESCE(gt.numeric_value, 0) < (\n            SELECT numeric_value FROM grade_types WHERE grade = cgr.minimum_grade\n          )\n        WHEN EXISTS (SELECT 1 FROM prerequisite_courses pc WHERE pc.course_code = sc.course_code)\n          OR COALESCE(sc.category_name, cc.category_name, '') = 'Required Major Classes'\n          THEN sc.grade IN ('D', 'E', 'I')\n        ELSE sc.grade IN ('E', 'I')\n      END\n    ) THEN true\n    ELSE false\n  END AS voluntary_retake_possible,\n  COALESCE(ca.total_attempts, 1) AS total_attempts,\n  CASE\n    WHEN sc.course_code IS NULL THEN true\n    ELSE (ar.row_num = 1)\n  END AS is_latest_attempt,\n  CASE\n    WHEN sc.course_code IS NULL THEN NULL\n    ELSE COALESCE(ca.total_attempts, 0) >= 3 OR sc.grade IS NULL\n  END AS retake_limit_reached\nFROM student_courses sc\nJOIN student_profiles sp ON sc.student_id = sp.student_id\nLEFT JOIN student_semester_mappings ssm \n  ON sc.semester_id = ssm.academic_semester_id AND ssm.student_id = sp.student_id\nJOIN attempt_ranking ar\n  ON sc.id = ar.student_course_id\nLEFT JOIN courses c ON sc.course_code = c.code\nLEFT JOIN departments d ON c.department_code = d.code\nLEFT JOIN grade_types gt ON sc.grade = gt.grade\nLEFT JOIN course_grade_requirements cgr \n  ON sc.course_code = cgr.course_code \n  AND sp.major_code = cgr.major_code\n  AND (\n    sp.cohort_year BETWEEN cgr.applicable_from_cohort_year AND cgr.applicable_until_cohort_year\n    OR (cgr.applicable_from_cohort_year IS NULL AND cgr.applicable_until_cohort_year IS NULL)\n  )\nLEFT JOIN course_attempts ca \n  ON sc.student_id = ca.student_id \n  AND sc.course_code = ca.course_code\nLEFT JOIN categorized_course cc \n  ON cc.course_code = sc.course_code \n  AND cc.student_id = sc.student_id\n",
      "name": "student_course_status_view",
      "schema": "public",
      "isExisting": false,
      "materialized": false
    },
    "public.student_degree_requirement_progress_view": {
      "columns": {
        "auth_id": {
          "name": "auth_id",
          "type": "varchar",
          "primaryKey": true,
          "notNull": true
        },
        "student_id": {
          "name": "student_id",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "parent_category": {
          "name": "parent_category",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "category_name": {
          "name": "category_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "sub_category": {
          "name": "sub_category",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "courses_required": {
          "name": "courses_required",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "credits_required": {
          "name": "credits_required",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "courses_completed": {
          "name": "courses_completed",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "credits_completed": {
          "name": "credits_completed",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "courses_remaining": {
          "name": "courses_remaining",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "credits_remaining": {
          "name": "credits_remaining",
          "type": "integer",
          "primaryKey": false,
          "notNull": true
        },
        "progress_percentage": {
          "name": "progress_percentage",
          "type": "numeric(5, 2)",
          "primaryKey": false,
          "notNull": false
        },
        "requirement_met": {
          "name": "requirement_met",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true
        }
      },
      "definition": "\nWITH student_info AS (\n  SELECT\n    sp.auth_id,\n    sp.student_id,\n    sp.major_code,\n    sp.math_track_name,\n    sp.cohort_year,\n    sp.capstone_option_name\n  FROM student_profiles sp\n),\ncategory_requirements AS (\n  SELECT\n    src.student_id,\n    src.auth_id,\n    src.parent_category,\n    CASE\n      WHEN src.category_name IN ('Major Electives', 'Non-Major Electives')\n      THEN COALESCE(src.sub_category, src.category_name)\n      ELSE src.category_name\n    END AS requirement_category,\n    src.category_name AS original_category,\n    COUNT(*) AS courses_required,\n    COALESCE(SUM(src.credits), 0) AS credits_required,\n    BOOL_OR(\n      src.sub_category = 'Free Elective' AND si.major_code = 'MIS'\n    ) AS enforce_max\n  FROM student_required_courses_view src\n  JOIN student_info si ON src.student_id = si.student_id\n  GROUP BY\n    src.student_id,\n    src.auth_id,\n    src.parent_category,\n    CASE\n      WHEN src.category_name IN ('Major Electives', 'Non-Major Electives')\n      THEN COALESCE(src.sub_category, src.category_name)\n      ELSE src.category_name\n    END,\n    src.category_name\n),\ncompleted_courses AS (\n  SELECT\n    sccsv.student_id,\n    sccsv.course_code,\n    sccsv.credits,\n\tsccsv.course_title,\n    sccsv.parent_category,\n    sccsv.category_name,\n    sccsv.sub_category\n  FROM student_course_categorized_status_view sccsv\n  WHERE sccsv.status = 'planned' or sccsv.passed = true AND sccsv.is_latest_attempt = true\n),\ncategory_progress AS (\n  SELECT\n    cr.student_id,\n    cr.auth_id,\n    cr.parent_category,\n    cr.original_category AS category_name,  -- Directly use original category\n    CASE\n      WHEN cr.original_category = 'Non-Major Electives' \n      THEN cr.requirement_category  -- Show sub-category for electives\n      ELSE NULL\n    END AS sub_category,\n    cr.courses_required,\n    cr.credits_required,\n\tCOUNT(DISTINCT cc.course_title) AS raw_courses_completed,\n    COALESCE(SUM(cc.credits), 0) AS raw_credits_completed,\n    cr.enforce_max\n  FROM category_requirements cr\n  LEFT JOIN completed_courses cc\n    ON cr.student_id = cc.student_id\n    AND (\n      -- For Non-Major Electives, match sub-category-to-sub-category\n      (cr.original_category = 'Non-Major Electives' AND cc.sub_category = cr.requirement_category)\n      OR\n      -- For other categories, match category-to-category\n      (cr.original_category <> 'Non-Major Electives' AND cc.category_name = cr.requirement_category)\n    )\n  GROUP BY\n    cr.student_id,\n    cr.auth_id,\n    cr.parent_category,\n    cr.original_category,\n    cr.requirement_category,\n    cr.courses_required,\n    cr.credits_required,\n    cr.enforce_max\n),\nfinal_progress AS (\n  SELECT\n    student_id,\n    auth_id,\n    parent_category,\n    category_name,\n    sub_category,\n    courses_required,\n    credits_required,\n    CASE WHEN enforce_max THEN LEAST(raw_courses_completed, courses_required)\n    ELSE raw_courses_completed END AS courses_completed,\n    CASE WHEN enforce_max THEN LEAST(raw_credits_completed, credits_required)\n    ELSE raw_credits_completed END AS credits_completed,\n    GREATEST(courses_required -\n      CASE WHEN enforce_max THEN LEAST(raw_courses_completed, courses_required)\n      ELSE raw_courses_completed END, 0) AS courses_remaining,\n    GREATEST(credits_required -\n      CASE WHEN enforce_max THEN LEAST(raw_credits_completed, credits_required)\n      ELSE raw_credits_completed END, 0) AS credits_remaining,\n    ROUND(LEAST(\n      CASE WHEN courses_required > 0\n      THEN (CASE WHEN enforce_max\n        THEN LEAST(raw_courses_completed, courses_required)\n        ELSE raw_courses_completed END\n        / courses_required::NUMERIC) * 100\n      ELSE 0 END,\n      100), 2) AS progress_percentage,\n    (CASE WHEN enforce_max THEN raw_courses_completed >= courses_required\n      ELSE raw_courses_completed >= courses_required END\n      AND raw_credits_completed >= credits_required) AS requirement_met\n  FROM category_progress\n)\nSELECT\n  fp.student_id,\n  fp.auth_id,\n  fp.parent_category,\n  fp.category_name,\n  fp.sub_category,\n  fp.courses_required,\n  fp.credits_required,\n  fp.courses_completed,\n  fp.credits_completed,\n  fp.courses_remaining,\n  fp.credits_remaining,\n  fp.progress_percentage,\n  fp.requirement_met\nFROM final_progress fp\n",
      "name": "student_degree_requirement_progress_view",
      "schema": "public",
      "isExisting": false,
      "materialized": false
    },
    "public.student_remaining_requirements_view": {
      "columns": {
        "auth_id": {
          "name": "auth_id",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "student_id": {
          "name": "student_id",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "parent_category": {
          "name": "parent_category",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "category_name": {
          "name": "category_name",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "sub_category": {
          "name": "sub_category",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "course_code": {
          "name": "course_code",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "course_title": {
          "name": "course_title",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "credits": {
          "name": "credits",
          "type": "numeric(5, 1)",
          "primaryKey": false,
          "notNull": false
        },
        "recommended_year": {
          "name": "recommended_year",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "recommended_semester": {
          "name": "recommended_semester",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "offered_in_semesters": {
          "name": "offered_in_semesters",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "requirement_type": {
          "name": "requirement_type",
          "type": "varchar(20)",
          "primaryKey": false,
          "notNull": false
        },
        "priority_order": {
          "name": "priority_order",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        }
      },
      "definition": "\nWITH requirement_base AS (\n  SELECT \n    req.auth_id,\n    req.student_id,\n    req.parent_category,\n    req.category_name,\n    req.sub_category,\n    req.course_code,\n    req.course_title,\n    req.credits,\n    req.recommended_year,\n    req.recommended_semester,\n    req.offered_in_semesters,\n    req.is_required,\n    CASE \n      WHEN req.course_code IS NULL THEN 'elective_placeholder'\n      ELSE 'concrete_course' \n    END AS course_type\n  FROM student_required_courses_view req\n),\n\nprogress_data AS (\n  SELECT \n    prg.auth_id,\n    prg.parent_category,\n    prg.category_name,\n    prg.sub_category,\n    prg.courses_remaining,\n    prg.credits_remaining\n  FROM student_degree_requirement_progress_view prg\n),\n\ncompleted_courses AS (\n  SELECT \n    cat.auth_id,\n    cat.student_id,\n    cat.parent_category,\n    cat.category_name,\n    cat.sub_category,\n    cat.course_code,\n\tcat.course_title,\n    cat.status,\n    cat.passed,\n    cat.retake_needed\n  FROM student_course_categorized_status_view cat\n  WHERE cat.is_latest_attempt = true  -- Planned courses are included insitu\n),\n\nremaining_concrete_courses AS (\n  SELECT \n    rb.auth_id,\n    rb.student_id,\n    rb.parent_category,\n    rb.category_name,\n    rb.sub_category,\n    rb.course_code,\n    rb.course_title,\n    rb.credits,\n    rb.recommended_year,\n    rb.recommended_semester,\n    rb.offered_in_semesters,\n    'required_course' AS requirement_type,\n    ROW_NUMBER() OVER (\n      PARTITION BY rb.parent_category, rb.category_name, rb.sub_category \n      ORDER BY \n        rb.recommended_year NULLS LAST, \n        rb.recommended_semester NULLS LAST\n    ) AS priority_order\n   FROM requirement_base rb\n  LEFT JOIN (\n    SELECT DISTINCT auth_id, student_id, course_code\n    FROM completed_courses\n  ) cc\n    ON cc.course_code IS NOT DISTINCT FROM rb.course_code\n   AND cc.student_id = rb.student_id\n  WHERE rb.course_type = 'concrete_course'\n    AND cc.course_code IS NULL  -- means no match found\n),\n\nremaining_electives AS (\n  SELECT *\n  FROM (\n    SELECT\n      rb.auth_id,\n      rb.student_id,\n      rb.parent_category,\n      rb.category_name,\n      rb.sub_category,\n      NULL AS course_code,\n      rb.course_title,\n      rb.credits,\n      NULL::integer AS recommended_year,\n      NULL::integer AS recommended_semester,\n      NULL::semester_offering[] AS offered_in_semesters,\n      'elective_placeholder' AS requirement_type,\n      pd.courses_remaining,\n      ROW_NUMBER() OVER (\n        PARTITION BY rb.auth_id, rb.parent_category, rb.category_name, rb.sub_category \n        ORDER BY rb.course_title\n      ) AS priority_order\n    FROM requirement_base rb\n    JOIN progress_data pd \n      ON rb.auth_id = pd.auth_id\n      AND rb.parent_category = pd.parent_category\n      AND rb.category_name = pd.category_name\n      AND COALESCE(rb.sub_category, '') = COALESCE(pd.sub_category, '')\n    WHERE rb.course_type = 'elective_placeholder'\n      AND pd.courses_remaining > 0\n  ) sub\n  WHERE priority_order <= courses_remaining\n),\n\n\nretake_requirements AS (\n  SELECT \n    cc.auth_id,\n    cc.student_id,\n    cc.parent_category,\n    cc.category_name,\n    cc.sub_category,\n    cc.course_code,\n    c.title AS course_title,\n    c.credits,\n    NULL::integer AS recommended_year,\n    NULL::integer AS recommended_semester,\n    c.offered_in_semesters,  -- Already correct type from courses table\n    'retake_required' AS requirement_type,\n    0 AS priority_order\n  FROM completed_courses cc\n  JOIN courses c ON cc.course_code = c.code\n  WHERE cc.retake_needed = true\n    AND cc.passed = false\n    AND EXISTS (\n      SELECT 1\n      FROM requirement_base rb\n      WHERE rb.course_code = cc.course_code\n        AND rb.is_required = true\n    )\n)\n-- select * from progress_data\n-- Combine all requirement types\nSELECT * FROM retake_requirements\nUNION ALL\nSELECT * FROM remaining_concrete_courses\nUNION ALL\nSELECT \n  auth_id,\n  student_id,\n  parent_category,\n  category_name,\n  sub_category,\n  course_code,\n  course_title,\n  credits,\n  recommended_year,\n  recommended_semester,\n  offered_in_semesters,\n  requirement_type,\n  priority_order\nFROM remaining_electives -- Listing all attributes and ommitting courses_remaining\nORDER BY\n  priority_order,\n  recommended_year NULLS LAST,\n  recommended_semester NULLS LAST,\n  parent_category,\n  category_name,\n  sub_category\n",
      "name": "student_remaining_requirements_view",
      "schema": "public",
      "isExisting": false,
      "materialized": false
    },
    "public.student_required_courses_view": {
      "columns": {
        "auth_id": {
          "name": "auth_id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "student_id": {
          "name": "student_id",
          "type": "varchar",
          "primaryKey": false,
          "notNull": false
        },
        "parent_category": {
          "name": "parent_category",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "category_name": {
          "name": "category_name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "sub_category": {
          "name": "sub_category",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "course_code": {
          "name": "course_code",
          "type": "varchar",
          "primaryKey": false,
          "notNull": true
        },
        "course_title": {
          "name": "course_title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "credits": {
          "name": "credits",
          "type": "numeric(3, 1)",
          "primaryKey": false,
          "notNull": false
        },
        "offered_in_semesters": {
          "name": "offered_in_semesters",
          "type": "text[]",
          "primaryKey": false,
          "notNull": false
        },
        "recommended_year": {
          "name": "recommended_year",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "recommended_semester": {
          "name": "recommended_semester",
          "type": "integer",
          "primaryKey": false,
          "notNull": false
        },
        "is_required": {
          "name": "is_required",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        }
      },
      "definition": "\nWITH student_info AS (\n  SELECT\n    student_id, major_code, cohort_year,\n    math_track_name, capstone_option_name, auth_id\n  FROM student_profiles\n),\nrequired_courses_base AS (\n  SELECT\n    sp.student_id,\n\tsp.auth_id,\n    cc.course_code,\n    CASE\n      WHEN cc.category_name IN (\n        'Humanities & Social Sciences', 'Business', 'Mathematics & Quantitative',\n        'Computing', 'Science', 'Research / Project Prep.', 'Non-Major Electives'\n      ) THEN 'LIBERAL ARTS & SCIENCES CORE'\n      WHEN cc.category_name IN ('Required Major Classes', 'Major Electives', 'Capstone') THEN 'MAJOR'\n    END AS parent_category,\n    cc.category_name AS category_name,\n    cc.category_name AS sub_category,\n    c.title AS course_title,\n    c.credits,\n    c.offered_in_semesters,  -- Added from courses table\n    cc.recommended_year,      -- Added from course_categorization\n    cc.recommended_semester,  -- Added from course_categorization\n    cc.is_required\n  FROM student_info sp\n  JOIN course_categorization cc\n    ON (\n      (cc.major_group IS NULL OR cc.major_group = sp.major_code OR cc.major_group = 'ALL' OR\n      cc.major_group = CASE\n                        WHEN sp.major_code IN ('CE', 'ME', 'EE') THEN 'ENG'\n                        ELSE 'NON-ENG'\n                      END\n      ) AND\n      (cc.applicable_from_cohort_year IS NULL OR sp.cohort_year >= cc.applicable_from_cohort_year) AND\n      (cc.applicable_until_cohort_year IS NULL OR sp.cohort_year <= cc.applicable_until_cohort_year) AND\n      (cc.math_track_name IS NULL OR cc.math_track_name = sp.math_track_name) AND\n      (cc.capstone_option_name IS NULL OR cc.capstone_option_name = sp.capstone_option_name)\n    )\n  JOIN courses c ON c.code = cc.course_code\n  WHERE cc.is_required = true\n),\n-- All elective CTEs updated with NULLs for new fields\nmajor_electives AS (\n  SELECT\n    si.student_id,\n\tsi.auth_id,\n    NULL::TEXT AS course_code,\n    'MAJOR' AS parent_category,\n    'Major Electives' AS category_name,\n     Null AS sub_category,\n    'Major Elective ' || row_number() OVER (\n      PARTITION BY si.student_id\n      ORDER BY dr.min_courses\n    ) AS course_title,\n    1.0 AS credits,\n    NULL::semester_offering[] AS offered_in_semesters,  -- Cast to enum array type\n    NULL::INTEGER AS recommended_year,\n    NULL::INTEGER AS recommended_semester,\n    true AS is_required\n  FROM student_info si\n  JOIN degree_requirements dr\n    ON si.major_code = dr.major_code\n    AND dr.category_name = 'Major Electives'\n  CROSS JOIN LATERAL (\n    SELECT generate_series(1,\n      CASE\n        WHEN si.capstone_option_name = 'Applied Project' THEN dr.min_courses + 1\n        ELSE dr.min_courses\n      END\n    )\n  ) AS s(num)\n),\nnon_major_electives AS (\n  SELECT\n    si.student_id,\n\tsi.auth_id,\n    NULL::TEXT AS course_code,\n    'LIBERAL ARTS & SCIENCES CORE' AS parent_category,\n    'Non-Major Electives' AS category_name,\n    'Non-Major Electives' AS sub_category,\n    'Non-Major Elective ' || row_number() OVER (\n      PARTITION BY si.student_id\n      ORDER BY dr.min_courses\n    ) AS course_title,\n    1.0 AS credits,\n    NULL::semester_offering[] AS offered_in_semesters,\n    NULL::INTEGER AS recommended_year,\n    NULL::INTEGER AS recommended_semester,\n    true AS is_required\n  FROM student_info si\n  JOIN (\n    SELECT major_code, SUM(min_courses) AS min_courses\n    FROM degree_requirements\n    WHERE category_name = 'Non-Major Electives'\n    GROUP BY major_code\n  ) dr ON si.major_code = dr.major_code\n  CROSS JOIN LATERAL (\n    SELECT generate_series(1,\n      GREATEST(\n        dr.min_courses -\n          CASE\n            WHEN si.major_code = 'MIS' THEN 2\n            ELSE 1\n          END,\n        0\n      )\n    )\n  ) AS s(num)\n),\nafricana_electives AS (\n  SELECT\n    si.student_id,\n\tsi.auth_id,\n    NULL::TEXT AS course_code,\n    'LIBERAL ARTS & SCIENCES CORE' AS parent_category,\n    'Non-Major Electives' AS category_name,\n    'Africana' AS sub_category,\n    'Africana 1' AS course_title,\n    1.0 AS credits,\n    NULL::semester_offering[] AS offered_in_semesters,\n    NULL::INTEGER AS recommended_year,\n    NULL::INTEGER AS recommended_semester,\n    true AS is_required\n  FROM student_info si\n  JOIN (\n    SELECT major_code, SUM(min_courses) AS min_courses\n    FROM degree_requirements\n    WHERE category_name = 'Non-Major Electives'\n    GROUP BY major_code\n  ) dr ON si.major_code = dr.major_code\n  WHERE dr.min_courses >= 1\n),\nfree_electives AS (\n  SELECT\n    si.student_id,\n\tsi.auth_id,\n    NULL::TEXT AS course_code,\n    'LIBERAL ARTS & SCIENCES CORE' AS parent_category,\n    'Non-Major Electives' AS category_name,\n    'Free Elective' AS sub_category,\n    'Free Elective 1' AS course_title,\n    1.0 AS credits,\n    NULL::semester_offering[] AS offered_in_semesters,\n    NULL::INTEGER AS recommended_year,\n    NULL::INTEGER AS recommended_semester,\n    true AS is_required\n  FROM student_info si\n  JOIN (\n    SELECT major_code, SUM(min_courses) AS min_courses\n    FROM degree_requirements\n    WHERE category_name = 'Non-Major Electives'\n    GROUP BY major_code\n  ) dr ON si.major_code = dr.major_code\n  WHERE si.major_code = 'MIS' AND dr.min_courses >= 2\n),\ncombined_required AS (\n  SELECT * FROM required_courses_base\n  UNION ALL\n  SELECT * FROM major_electives\n  UNION ALL\n  SELECT * FROM non_major_electives\n  UNION ALL\n  SELECT * FROM africana_electives\n  UNION ALL\n  SELECT * FROM free_electives\n)\nSELECT\n  cr.student_id,\n  cr.auth_id,\n  cr.parent_category,\n  cr.category_name,\n  cr.sub_category,\n  cr.course_code,\n  cr.course_title,\n  cr.credits,\n  cr.offered_in_semesters,  -- Included in final select\n  cr.recommended_year,      -- Included in final select\n  cr.recommended_semester,  -- Included in final select\n  cr.is_required\nFROM combined_required cr\n\n",
      "name": "student_required_courses_view",
      "schema": "public",
      "isExisting": false,
      "materialized": false
    }
  },
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}